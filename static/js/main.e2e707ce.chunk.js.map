{"version":3,"sources":["data/SelectableChatsData.js","data/MessageData.js","components/SimulatedLoginPage.js","components/TopBar.js","components/SelectableChat.js","components/ChatDivider.js","components/SideBar.js","components/NoChats.js","components/Chat.js","components/SearchPage.js","layouts/AppLayout.js","components/ClassCalendar.js","components/Settings.js","App.js","reportWebVitals.js","index.js"],"names":["getSelectableChatForPlatform","platformName","toLowerCase","chatId","chatName","chatDescription","avatarUrl","messages","getMyFirstChatMessages","platform","getCs50Messages","getSophiaMessages","SimulatedLoginPage","props","state","email","password","errors","invalid","this","length","event","preventDefault","doAddAccount","setState","target","value","accountType","match","params","type","addLogin","discord","zoom","logins","teams","doAddMessages","history","push","availableChats","addMessages","chats","classes","className","root","container","logo","src","getLogo","alt","loginForm","noValidate","onSubmit","e","handleSubmit","TextField","textfield","error","label","helperText","variant","onChange","handleEmailChange","handlePasswordChange","Button","loginButton","color","disabled","validateForm","React","Component","withStyles","theme","display","width","height","justifyContent","alignItems","formError","flexDirection","maxWidth","minWidth","marginBottom","spacing","TopBar","searchField","onSearch","bind","query","encodeURI","AppBar","position","Toolbar","Typography","title","noWrap","search","searchIcon","InputBase","placeholder","inputRoot","input","inputInput","inputProps","flexGrow","marginLeft","menuButton","marginRight","breakpoints","up","borderRadius","shape","backgroundColor","fade","palette","common","white","padding","pointerEvents","paddingLeft","transition","transitions","create","withRouter","SelectableChat","avatar","Avatar","avatarImage","details","content","notifications","ChatDivider","selectedChat","Accordion","AccordionSummary","expandIcon","aria-controls","id","List","component","map","index","ListItem","button","onClick","handleListItemClick","selected","addChat","SideBar","selectedIndex","Drawer","drawer","paper","drawerPaper","anchor","toolbar","Divider","ListItemIcon","ListItemText","primary","flexShrink","mixins","fixedOptions","option","icon","NoChats","text","types","typeLogo","Link","to","margin","Chat","user","qs","require","SearchPage","parse","location","ignoreQueryPrefix","filter","includes","header","results","getChats","platformHeading","platformResults","AppLayout","intId","parseInt","console","log","message","newMessage","sender","name","uid","discordChats","store","addNotification","insert","animationIn","animationOut","dismiss","duration","onScreen","teamsChats","zoomChats","addMessage","Fragment","CssBaseline","path","render","getMessages","localizer","momentLocalizer","moment","Event","href","link","style","EventAgenda","ClassCalendar","args","handleSelect","start","end","window","prompt","onEventSave","events","selectable","startAccessor","endAccessor","defaultView","Views","WEEK","onSelectEvent","alert","onSelectSlot","scrollToTime","components","agenda","KeybindSetting","useState","checked","setChecked","seq","currSeq","updateSeq","action","currAction","handleActionChange","handleKeyDown","repeat","keyCode","key","handleKeyUp","useEffect","addEventListener","removeEventListener","arr","keybinds","find","o","i","keybind","onBindSave","for","readOnly","join","onDelete","Settings","nArr","float","class","notify","toggleNotification","nextkIndex","updateIndex","Array","prototype","equals","warn","array","l","Object","defineProperty","enumerable","App","onAddLogin","onMessageSave","obj","back","basename","process","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e2e707ce.chunk.js","sourcesContent":["export function getSelectableChatForPlatform(platformName) {\n    switch (platformName.toLowerCase()) {\n        case \"discord\": {\n            return [\n                {\n                    chatId: 1,\n                    chatName: 'My first discord chat',\n                    chatDescription: 'Test channel',\n                    avatarUrl: 'https://via.placeholder.com/150',\n                    messages: []\n                },\n                {\n                    chatId: 2,\n                    chatName: 'CS50',\n                    chatDescription: 'Harvard Intro to CS Discord',\n                    avatarUrl: 'https://via.placeholder.com/150',\n                    messages: []\n                },\n                {\n                    chatId: 3,\n                    chatName: 'Sophia',\n                    chatDescription: 'Private discord chat with Sophia Mills',\n                    avatarUrl: 'https://via.placeholder.com/150',\n                    messages: []\n                }\n            ]\n        };\n        case \"teams\": {\n            return [\n                {\n                    chatId: 4,\n                    chatName: 'My first teams chat',\n                    chatDescription: 'Test channel',\n                    avatarUrl: 'https://via.placeholder.com/150',\n                    messages: []\n                },\n                {\n                    chatId: 5,\n                    chatName: 'CS50',\n                    chatDescription: 'Harvard Intro to CS Teams',\n                    avatarUrl: 'https://via.placeholder.com/150',\n                    messages: []\n                },\n                {\n                    chatId: 6,\n                    chatName: 'Sophia',\n                    chatDescription: 'Private teams chat with Sophia Mills',\n                    avatarUrl: 'https://via.placeholder.com/150',\n                    messages: []\n                }\n            ]\n        };\n        case \"zoom\": {\n            return [\n                {\n                    chatId: 7,\n                    chatName: 'My first zoom chat',\n                    chatDescription: 'Test channel',\n                    avatarUrl: 'https://via.placeholder.com/150',\n                    messages: []\n                },\n                {\n                    chatId: 8,\n                    chatName: 'CS50',\n                    chatDescription: 'Harvard Intro to CS Zoom',\n                    avatarUrl: 'https://via.placeholder.com/150',\n                    messages: []\n                },\n                {\n                    chatId: 9,\n                    chatName: 'Sophia',\n                    chatDescription: 'Private zoom chat with Sophia Mills',\n                    avatarUrl: 'https://via.placeholder.com/150',\n                    messages: []\n                }\n            ]\n        };\n        default: return null;\n    }\n}","export function getMyFirstChatMessages(platform) {\n    return [\n        {\n            \"text\": \"Hi there. This is my first ever chat message\",\n            \"id\": \"1\",\n            \"sender\": {\n                \"name\": \"Terry Crews\",\n                \"uid\": \"terrycrews_\" + platform,\n                \"avatar\": \"/images/terry.jpg\"\n            }\n        },\n    ]\n}\n\nexport function getCs50Messages(platform) {\n    return [\n        {\n            \"text\": \"Hi there. Welcome to CS50. Please introduce yourselves\",\n            \"id\": \"1\",\n            \"sender\": {\n                \"name\": \"CS50 Bot\",\n                \"uid\": \"cs50bot_\" + platform,\n                \"avatar\": \"/images/bot.jpg\"\n            }\n        },\n        {\n            \"text\": \"Hi there. I'm Mark Juniors\",\n            \"id\": \"2\",\n            \"sender\": {\n                \"name\": \"Mark J.\",\n                \"uid\": \"markj_\" + platform,\n                \"avatar\": \"/images/mark.jpg\"\n            }\n        },\n    ]\n}\n\nexport function getSophiaMessages(platform) {\n    return [\n        {\n            \"text\": \"Hi there. My name's Sophia! What's yours?\",\n            \"id\": \"1\",\n            \"sender\": {\n                \"name\": \"Sophia\",\n                \"uid\": \"sophia_\" + platform,\n                \"avatar\": \"/images/sophia.jpg\"\n            }\n        },\n        {\n            \"text\": \"This is an autoresponse\",\n            \"id\": \"2\",\n            \"sender\": {\n                \"name\": \"Me\",\n                \"uid\": \"currentUser\",\n                \"avatar\": \"https://ui-avatars.com/api/?name=M+E\"\n            }\n        },\n        {\n            \"text\": \"Oh. You must be busy. Are you available to meet on Decembet 17th, 2020 for a quick face to face meeting?\",\n            \"id\": \"3\",\n            \"sender\": {\n                \"name\": \"Sophia\",\n                \"uid\": \"sophia_\" + platform,\n                \"avatar\": \"/images/sophia.jpg\"\n            }\n        },\n    ]\n}","import React from \"react\";\nimport { withStyles } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { getSelectableChatForPlatform } from '../data/SelectableChatsData';\nimport { getCs50Messages, getMyFirstChatMessages, getSophiaMessages } from \"../data/MessageData\";\n\nconst useStyles = (theme) => ({\n  root: {\n    display: \"flex\",\n    width: \"100vw\",\n    height: \"100vh\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  formError: {\n    color: \"red\",\n  },\n  loginForm: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: 'center',\n\n  },\n  container: {\n    maxWidth: 960,\n    minWidth: 400,\n    display: \"flex\",\n    flexDirection: 'column',\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  loginButton: {\n    width: '75%'\n  },\n  textfield: {\n      marginBottom: theme.spacing(3),\n      width: '100%',\n  },\n  logo: {\n      maxWidth: 500,\n      marginBottom: theme.spacing(4)\n  }\n});\n\nclass SimulatedLoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {\n        invalid: false,\n      },\n    };\n  }\n\n  validateForm() {\n    return this.state.email.length > 0 && this.state.password.length > 0;\n  }\n\n  handleSubmit(event) {\n    event?.preventDefault();\n\n    if (\n      this.state.email === \"test@tocom.ca\" &&\n      this.state.password === \"tocom1\"\n    ) {\n      this.doAddAccount();\n    } else {\n      this.setState({ errors: { invalid: true } });\n    }\n  }\n\n  handleEmailChange(event) {\n    this.setState({\n        email: event.target.value,\n        errors: {\n            invalid: false\n        }\n    });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({\n        password: event.target.value,\n        errors: {\n            invalid: false\n        }\n    });\n  }\n\n  doAddAccount() {\n    var accountType = this.props?.match?.params?.type;\n\n    if (accountType === \"discord\") {\n      this.props.addLogin({\n        discord: true,\n        zoom: this.props.logins.zoom,\n        teams: this.props.logins.teams\n        });\n    } else if (accountType === \"teams\") {\n      this.props.addLogin({\n        teams: true,\n        zoom: this.props.logins.zoom,\n        discord: this.props.logins.discord,\n      });\n    } else if (accountType === \"zoom\") {\n      this.props.addLogin({\n        zoom: true,\n        discord: this.props.logins.discord,\n        teams: this.props.logins.teams\n      });\n    } \n\n    this.doAddMessages(accountType);\n\n    this.props.history.push('/app');\n  }\n\n  doAddMessages(accountType) {\n    var availableChats;\n\n    if (accountType === \"discord\") {\n      availableChats = getSelectableChatForPlatform(accountType);\n      availableChats[0].messages = getMyFirstChatMessages(accountType);\n      availableChats[1].messages = getCs50Messages(accountType);\n      availableChats[2].messages = getSophiaMessages(accountType);\n\n      this.props.addMessages({\n        discord: {\n          chats: availableChats\n        },\n        teams: this.props.messages.teams,\n        zoom: this.props.messages.zoom,\n      });\n\n    } else if (accountType === \"teams\") {\n      availableChats = getSelectableChatForPlatform(accountType);\n      availableChats[0].messages = getMyFirstChatMessages(accountType);\n      availableChats[1].messages = getCs50Messages(accountType);\n      availableChats[2].messages = getSophiaMessages(accountType);\n\n      this.props.addMessages({\n        teams: {\n          chats: availableChats\n        },\n        zoom: this.props.messages.zoom,\n        discord: this.props.messages.discord\n      });\n    } else if (accountType === \"zoom\") {\n      availableChats = getSelectableChatForPlatform(accountType);\n      availableChats[0].messages = getMyFirstChatMessages(accountType);\n      availableChats[1].messages = getCs50Messages(accountType);\n      availableChats[2].messages = getSophiaMessages(accountType);\n\n      this.props.addMessages({\n        zoom: {\n          chats: availableChats\n        },\n        teams: this.props.messages.teams,\n        discord: this.props.messages.discord\n      });\n    } else return;\n  }\n\n  getLogo(type) {\n    if (type === \"discord\") {\n      return \"/images/discord.png\";\n    } else if (type === \"teams\") {\n      return \"/images/teams.png\";\n    } else if (type === \"zoom\") {\n      return \"/images/zoom.png\";\n    } else return \"\";\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.container}>\n          <div>\n            <img className={classes.logo} src={this.getLogo(this.props?.match?.params?.type)} alt=\"Logo\"/>\n          </div>\n\n          <form className={classes.loginForm} noValidate={true} onSubmit={(e) => this.handleSubmit(e)}>\n            <TextField\n            className={classes.textfield}\n              error={this.state.errors.invalid}\n              label=\"Email\"\n              helperText={this.state.errors.invalid ? 'Invalid email or password' : ''}\n              variant=\"outlined\"\n              type=\"email\"\n              value={this.state.email}\n              onChange={(e) => this.handleEmailChange(e)}\n            />\n            <TextField\n            className={classes.textfield}\n              label=\"Password\"\n              variant=\"outlined\"\n              type=\"password\"\n              value={this.state.password}\n              onChange={(e) => this.handlePasswordChange(e)}\n            />\n            <Button\n              className={classes.loginButton}\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={!this.validateForm()}\n              type=\"submit\"\n            >\n              Login\n            </Button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(SimulatedLoginPage);\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { fade, withStyles } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { withRouter } from 'react-router-dom';\n\nconst useStyles = (theme) => ({\n  root: {\n    flexGrow: 1,\n    marginLeft: \"340px\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"36ch\",\n      \"&:focus\": {\n        width: \"42ch\",\n      },\n    },\n  },\n});\n\nclass TopBar extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchField: ''\n    };\n\n    this.onSearch = this.onSearch.bind(this);\n  }\n\n  onSearch(event) {\n    event.preventDefault();\n\n    var query = encodeURI(this.state.searchField);\n\n    this.setState({\n      searchField: ''\n    });\n\n    this.props.history.push('/app/search?query=' + query);\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n              <Typography className={classes.title} variant=\"h6\" noWrap>\n                Tocom Interactive Prototype\n              </Typography>\n\n            <form onSubmit={this.onSearch}>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"Search (chat, person, description, etc...)\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ \"aria-label\": \"search\" }}\n                value={this.state.searchField}\n                onChange={(event) => this.setState({searchField: event.target.value})}\n              />\n            </div>\n            </form>\n\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(withRouter(TopBar));\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core\";\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = theme => ({\n  root: {\n    display: \"flex\",\n  },\n  details: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.spacing(1)\n  },\n  content: {\n      \n  },\n  avatar: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: 80,\n      width: 80,\n  },\n  avatarImage: {\n      width: 64,\n      height: 64\n  },\n  notifications: {\n      display: 'flex',\n      flexDirection: 'row'\n  }\n});\n\nclass SelectableChat extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.avatar}>\n            <Avatar alt={this.props.chatName} src={this.props.avatarUrl} className={classes.avatarImage}/>\n        </div>\n        <div className={classes.details}>\n          <div className={classes.content}>\n            <Typography>\n              { this.props.chatName }\n            </Typography>\n            <Typography color=\"textSecondary\">\n              <small>{ this.props.chatDescription }</small>\n            </Typography>\n          </div>\n          <div className={classes.notifications}>\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(SelectableChat);\n","import React from \"react\";\nimport { Typography, withStyles } from \"@material-ui/core\";\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport SelectableChat from \"./SelectableChat\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport {withRouter} from 'react-router-dom';\n\nconst useStyles = (theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  platformName: {\n    display: \"flex\",\n    padding: theme.spacing(1),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  addChat: {\n    display: \"flex\",\n    padding: theme.spacing(1),\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100%\",\n  },\n});\n\nclass ChatDivider extends React.Component {\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedChat: 0\n    }\n  }\n\n  handleListItemClick(event, chatId) {\n    event.preventDefault();\n\n    this.setState({\n      selectedChat: chatId\n    });\n\n    this.props.history.push('/app/chat/' + chatId);\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography variant=\"h5\">{this.props.platformName}</Typography>\n        </AccordionSummary>\n        <List component=\"nav\">\n        {\n            this.props.chats?.map(({chatId, chatName, chatDescription, avatarUrl}, index) => \n                <ListItem key={chatId} button onClick={(event, id) => this.handleListItemClick(event, chatId)} selected={this.state.selectedChat === chatId}>\n                  <SelectableChat key={chatId} chatName={chatName} chatDescription={chatDescription} avatarUrl={avatarUrl} />\n                </ListItem>\n            )\n        }\n        </List>\n\n      </Accordion>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(withRouter(ChatDivider));\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AddIcon from '@material-ui/icons/Add';\nimport ChatDivider from \"./ChatDivider\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport {withRouter} from 'react-router-dom';\nimport EventIcon from '@material-ui/icons/Event';\n\nconst drawerWidth = 340;\n\nconst useStyles = (theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n  fixedOptions: {\n    display: \"flex\",\n    width: \"100%\",\n  },\n  option: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: 80,\n    width: \"100%\",\n  },\n  icon: {\n    width: 80,\n    padding: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  details: {\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(2),\n  },\n});\n\nexport class SideBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedIndex: -1,\n    };\n  }\n\n  handleListItemClick = (event, index) => {\n    this.setState({ selectedIndex: index });\n\n    if (index === 0) {\n      this.props.history.push(\"/app/addAccount\");\n    }\n    if (index === 1) {\n      this.props.history.push(\"/settings\");\n    }\n    if (index === 2) {\n      this.props.history.push(\"/calendar\");\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <div className={classes.toolbar} />\n        <Divider />\n        <ChatDivider platformName=\"Discord\" chats={this.props.messages?.discord?.chats} />\n        <ChatDivider platformName=\"Teams\" chats={this.props.messages?.teams?.chats} />\n        <ChatDivider platformName=\"Zoom\" chats={this.props.messages?.zoom?.chats} />\n        <Divider />\n\n        <List component=\"nav\">\n          <ListItem\n            button\n            onClick={(event) => this.handleListItemClick(event, 0)}\n          >\n            <ListItemIcon>\n              <AddIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Add Account\" />\n          </ListItem>\n          <ListItem\n            button\n            onClick={(event) => this.handleListItemClick(event, 1)}\n          >\n            <ListItemIcon>\n              <SettingsIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Settings\" />\n          </ListItem>\n          <ListItem\n            button\n            onClick={(event) => this.handleListItemClick(event, 2)}\n          >\n            <ListItemIcon>\n              <EventIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Calendar\" />\n          </ListItem>\n        </List>\n      </Drawer>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(withRouter(SideBar));\n","import React from \"react\";\nimport { Typography, withStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = (theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  types: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  type: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n    margin: theme.spacing(8),\n  },\n  text: {\n    \n  },\n  logo: {\n    width: 128,\n    height: 128,\n    marginBottom: theme.spacing(2)\n  },\n});\n\nclass NoChats extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Typography className={classes.text} variant=\"h4\">\n          Connect an Account\n        </Typography>\n        <div className={classes.types}>\n          {!this.props.logins.discord && (\n            <div className={classes.type}>\n              <div className={classes.typeLogo}>\n                <img className={classes.logo} src=\"/images/discord_icon.png\" />\n              </div>\n              <Button variant=\"outlined\" color=\"primary\" component={Link} to=\"/external/connectAccount/discord\">\n                Add Discord Account\n              </Button>\n            </div>\n          )}\n          {!this.props.logins.teams && (\n            <div className={classes.type}>\n              <div className={classes.typeLogo}>\n                <img className={classes.logo} src=\"/images/teams_icon.png\" />\n              </div>\n              <Button variant=\"outlined\" color=\"primary\" component={Link} to=\"/external/connectAccount/teams\">\n                Add Teams Account\n              </Button>\n            </div>\n          )}\n          {!this.props.logins.zoom && (\n            <div className={classes.type}>\n              <div className={classes.typeLogo}>\n                <img className={classes.logo} src=\"/images/zoom_icon.png\" />\n              </div>\n              <Button variant=\"outlined\" color=\"primary\" component={Link} to=\"/external/connectAccount/zoom\">\n                Add Zoom Account\n              </Button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(NoChats);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core';\nimport { ChatBox } from 'react-chatbox-component';\n\nconst useStyles = theme => ({\n\n});\n\nclass Chat extends React.Component {\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            \n            <ChatBox\n                messages={this.props.messages}\n                user={this.props.user}\n                onSubmit={this.props.onSubmit}\n            />\n        );\n    }\n}\n\nexport default withStyles(useStyles)(Chat);","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport SelectableChat from \"./SelectableChat\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst qs = require(\"qs\");\n\nconst useStyles = (theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  header: {\n    display: \"flex\",\n    width: \"100%\",\n    padding: theme.spacing(4),\n    paddingLeft: theme.spacing(8),\n  },\n  results: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: theme.spacing(2),\n  },\n});\n\nclass SearchPage extends React.Component {\n  handleListItemClick(event, chatId) {\n    this.props.history.push(\"/app/chat/\" + chatId);\n  }\n\n  getChats(platform) {\n    let chats;\n    if (platform === \"discord\") {\n      chats = this.props.messages.discord.chats;\n    } else if (platform === \"teams\") {\n      chats = this.props.messages.teams.chats;\n    } else if (platform === \"zoom\") {\n      chats = this.props.messages.zoom.chats;\n    } else return [];\n\n    if (chats.length === 0) {\n      return [];\n    }\n\n    const query = qs.parse(this.props.location.search, {\n      ignoreQueryPrefix: true,\n    }).query;\n\n    return chats.filter(({ chatName, chatDescription }) => {\n      return (\n        chatName.toLowerCase().includes(query.toLowerCase()) ||\n        chatDescription.toLowerCase().includes(query.toLowerCase())\n      );\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    const query = qs.parse(this.props.location.search, {\n      ignoreQueryPrefix: true,\n    }).query;\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.header}>\n          <Typography variant=\"h5\">\n            Search Results for: <small>{query}</small>\n          </Typography>\n        </div>\n\n        <div className={classes.results}>\n          {this.getChats(\"discord\").length > 0 && (\n            <div className={classes.platform}>\n              <div className={classes.platformHeading}>\n                <Typography variant=\"h5\">Discord</Typography>\n              </div>\n              <div className={classes.platformResults}>\n                <List component=\"nav\">\n                  {this.getChats(\"discord\").map(\n                    (\n                      { chatId, chatName, chatDescription, avatarUrl },\n                      index\n                    ) => (\n                      <ListItem\n                        key={chatId}\n                        button\n                        onClick={(event, id) =>\n                          this.handleListItemClick(event, chatId)\n                        }\n                      >\n                        <SelectableChat\n                          key={chatId}\n                          chatName={chatName}\n                          chatDescription={chatDescription}\n                          avatarUrl={avatarUrl}\n                        />\n                      </ListItem>\n                    )\n                  )}\n                </List>\n              </div>\n            </div>\n          )}\n\n          {this.getChats(\"teams\").length > 0 && (\n            <div className={classes.platform}>\n              <div className={classes.platformHeading}>\n                <Typography variant=\"h5\">Microsoft Teams</Typography>\n              </div>\n              <div className={classes.platformResults}>\n                <List component=\"nav\">\n                  {this.getChats(\"teams\").map(\n                    (\n                      { chatId, chatName, chatDescription, avatarUrl },\n                      index\n                    ) => (\n                      <ListItem\n                        key={chatId}\n                        button\n                        onClick={(event, id) =>\n                          this.handleListItemClick(event, chatId)\n                        }\n                      >\n                        <SelectableChat\n                          key={chatId}\n                          chatName={chatName}\n                          chatDescription={chatDescription}\n                          avatarUrl={avatarUrl}\n                        />\n                      </ListItem>\n                    )\n                  )}\n                </List>\n              </div>\n            </div>\n          )}\n\n          {this.getChats(\"zoom\").length > 0 && (\n            <div className={classes.platform}>\n              <div className={classes.platformHeading}>\n                <Typography variant=\"h5\">Zoom</Typography>\n              </div>\n              <div className={classes.platformResults}>\n                <List component=\"nav\">\n                  {this.getChats(\"zoom\").map(\n                    (\n                      { chatId, chatName, chatDescription, avatarUrl },\n                      index\n                    ) => (\n                      <ListItem\n                        key={chatId}\n                        button\n                        onClick={(event, id) =>\n                          this.handleListItemClick(event, chatId)\n                        }\n                      >\n                        <SelectableChat\n                          key={chatId}\n                          chatName={chatName}\n                          chatDescription={chatDescription}\n                          avatarUrl={avatarUrl}\n                        />\n                      </ListItem>\n                    )\n                  )}\n                </List>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(withRouter(SearchPage));\n","import React from \"react\";\nimport { CssBaseline, withStyles } from \"@material-ui/core\";\nimport TopBar from \"../components/TopBar\";\nimport SideBar from \"../components/SideBar\";\nimport NoChats from \"../components/NoChats\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Chat from \"../components/Chat\";\nimport \"../App.css\";\nimport SearchPage from \"../components/SearchPage\";\nimport { store } from 'react-notifications-component';\nconst sidebarWidth = 300;\n\nconst useStyles = (theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    marginLeft: 340,\n  },\n});\n\nclass AppLayout extends React.Component {\n  anyLogins() {\n    if (\n      this.props.logins.discord ||\n      this.props.logins.zoom ||\n      this.props.logins.teams\n    ) {\n      return true;\n    } else return false;\n  }\n\n  getMessages(id) {\n    var intId = parseInt(id);\n\n    const messages = [\n      ...this.props.messages.discord.chats,\n      ...this.props.messages.teams.chats,\n      ...this.props.messages.zoom.chats,\n    ];\n\n    var filtered = messages.filter(({ chatId }) => {\n      return chatId === intId;\n    });\n\n    return filtered[0].messages;\n  }\n\n  onSubmit(chatId, props) {\n    console.log(\"creating on submit function\");\n\n    return function (message) {\n      console.log(\"onSubmit called\");\n      console.log(chatId + \" \" + message);\n      //console.log(props);\n\n      var newMessage = {\n        text: message,\n        id: 0,\n        sender: {\n          name: \"Me\",\n          uid: \"currentUser\",\n          avatar: \"https://ui-avatars.com/api/?name=M+E\",\n        },\n      };\n\n      var discord = props.messages.zoom;\n      var teams = props.messages.teams;\n      var zoom = props.messages.zoom;\n\n      if (chatId >= 1 && chatId <= 3) {\n        var discordChats = [...props.messages.discord.chats];\n\n        newMessage.id = discordChats[chatId - 1].messages.length + 1;\n\n        discordChats[chatId - 1].messages = [\n          ...discordChats[chatId - 1].messages,\n          newMessage,{\n            \"text\": \"This is an automated response\",\n            \"id\": newMessage.id + 1,\n            \"sender\": {\n                \"name\": \"CS50 Bot\",\n                \"uid\": \"cs50bot_discord\",\n                \"avatar\": \"/images/bot.jpg\"\n            }\n        }\n        ];\n\n        store.addNotification({\n          title: \"CS50 Bot has sent you a message on discord!\",\n          message: \"This is an automated response\",\n          type: \"success\",\n          insert: \"bottom\",\n          container: \"bottom-right\",\n          animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n          animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n          dismiss: {\n            duration: 5000,\n            onScreen: true\n          }\n        });\n\n        discord = {\n          chats: discordChats,\n        };\n      } else if (chatId >= 4 && chatId <= 6) {\n        var teamsChats = [...props.messages.teams.chats];\n\n        newMessage.id = teamsChats[chatId - 4].messages.length + 1;\n\n        teamsChats[chatId - 4].messages = [\n          ...teamsChats[chatId - 4].messages,\n          newMessage,\n        ];\n\n        teams = {\n          chats: teamsChats,\n        };\n      } else if (chatId >= 7 && chatId <= 9) {\n        var zoomChats = [...props.messages.zoom.chats];\n\n        newMessage.id = zoomChats[chatId - 7].messages.length + 1;\n\n        zoomChats[chatId - 7].messages = [\n          ...zoomChats[chatId - 7].messages,\n          newMessage,\n        ];\n\n        zoom = {\n          chats: zoomChats,\n        };\n      }\n\n      props.addMessage({\n        discord: discord,\n        teams: teams,\n        zoom: zoom,\n      });\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <TopBar />\n        <SideBar messages={this.props.messages} />\n        <main className={classes.content}>\n          <div className={classes.toolbar}>\n            <Switch>\n              <Route\n                path=\"/app/addAccount\"\n                render={() => <NoChats logins={this.props.logins} />}\n              />\n              <Route\n                path=\"/app/chat/:id\"\n                render={(props) => (\n                  <Chat\n                    {...props}\n                    user={this.props.user}\n                    messages={this.getMessages(props.match.params.id)}\n                    chatId={props.match.params.id}\n                    onSubmit={this.onSubmit(\n                      parseInt(props.match.params.id),\n                      this.props\n                    )}\n                  />\n                )}\n              />\n              <Route\n                path=\"/app/search\"\n                render={(props) => (\n                  <SearchPage {...props} messages={this.props.messages} />\n                )}\n              />\n            </Switch>\n          </div>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(AppLayout);\n","import React from 'react'\nimport { Calendar, momentLocalizer, Views } from 'react-big-calendar'\nimport moment from 'moment'\nimport \"react-big-calendar/lib/css/react-big-calendar.css\"\nimport \"./ClassCalendar.css\"\nimport SideBar from \"../components/SideBar\";\nimport TopBar from \"../components/TopBar\";\nconst localizer = momentLocalizer(moment)\nconst propTypes = {}\n\nfunction Event({ event }) {\n  return (\n    <span>\n      <strong>{event.title + \": \"}</strong>\n      <a href={event.link} style={{color: \"red\"}}>{event.link}</a>\n    </span>\n  )\n}\n\nfunction EventAgenda({ event }) {\n  return (\n    <span>\n      <strong>{event.title +\": \"}</strong>\n      <a href={event.link} style={{color: \"red\"}}>{event.link}</a>\n    </span>\n  )\n}\n\nclass ClassCalendar extends React.Component {\n  constructor(...args) {\n    super(...args)\n    this.onEventSave = this.props.onEventSave;\n  }\n\n  handleSelect = ({ start, end }) => {\n    const title = window.prompt('New Event name')\n    const link = window.prompt('Enter Class Link')\n    if (title)\n      this.onEventSave([\n        ...this.props.events,\n        {\n          start,\n          end,\n          title,\n          link\n        },\n      ])\n  }\n\n  render() {\n    return (\n      <div>\n        <TopBar></TopBar>\n        <SideBar messages={this.props.messages} />\n        <Calendar\n          selectable\n          localizer={localizer}\n          events={this.props.events}\n          startAccessor=\"start\"\n          endAccessor=\"end\"\n          defaultView={Views.WEEK}\n          onSelectEvent={event => alert(event.title + \" : \" + event.link)}\n          onSelectSlot={this.handleSelect}\n          style={{ height: 500, marginLeft: 340 }}\n          scrollToTime\n          components={{\n            event: Event,\n            agenda: {\n              event: EventAgenda,\n            },\n          }\n        }\n        />\n      </div>\n    )\n  }\n}\n\nClassCalendar.propTypes = propTypes\n\nexport default ClassCalendar;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport SideBar from \"../components/SideBar\";\nimport { useEffect, useState } from 'react';\nimport './Settings.css'\nimport TopBar from \"../components/TopBar\";\nfunction KeybindSetting(props){\n    const [checked, setChecked] = useState(false);\n    const [currSeq, updateSeq] = useState(props.seq);\n    const [currAction, handleActionChange] = useState(props.action)\n    const handleKeyDown = (event) => {\n\n        if (!event.repeat){\n            if (event.keyCode === 32){\n                updateSeq([\"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n            }else{updateSeq([...currSeq,event.key.toLowerCase()])}\n            \n        }\n    };\n    const handleKeyUp = (event) => {\n        if (currSeq.includes(event.key.toLowerCase() )){\n            setChecked(!checked);\n        }\n    };  \n      useEffect(() => {\n        \n        checked ? window.addEventListener('keydown', handleKeyDown):window.removeEventListener('keydown', handleKeyDown);\n        checked ? window.addEventListener('keyup', handleKeyUp):window.removeEventListener('keyup', handleKeyUp);\n        if (currSeq.length === 4 && checked) {\n            setChecked(!checked)\n        }\n        if (!checked){\n            // console.log(props.keybinds)\n            let arr = props.keybinds\n            let obj = arr.find((o, i) => {\n                if (o.id === props.index) {\n                    arr[i] = { id: o.id, action: currAction, keybind: currSeq };\n                    return true; // stop searching\n                }\n            });\n            if (obj){\n                props.onBindSave(arr);\n            }else{\n                props.onBindSave([...props.keybinds, { id: props.index, action: currAction, keybind: currSeq }]);\n            }\n        }\n        \n        return () => {\n          window.removeEventListener('keydown', handleKeyDown);\n        };\n      }, [checked,handleKeyDown,handleKeyUp,currSeq.length]);\n\n\n    return (\n        <div>\n            <label for=\"actions\">Action:</label>\n            <select value={currAction} onChange={(event) => handleActionChange(event.target.value)} name=\"actions\">\n                <option value=\"unassigned\">Unassigned</option>\n                <option value=\"notify\">Toggle Notification Mute</option>\n                <option value=\"back\">Navigate Back</option>\n            </select>\n            \n            <label for=\"keybind\">Keybind:</label>\n            <input name=\"keybind\" readOnly value={currSeq.length > 6 ? \"\" : currSeq.join(\" + \")} type=\"text\"/>\n            <button  type=\"button\" onClick={() => {checked ? console.log(\"\"): updateSeq([]);setChecked(!checked)}} className={checked ? \"btn btn-danger\":\"btn btn-primary\"}>Record</button>\n            <button  type=\"button\" onClick={() => props.onDelete(props.index)} className={\"btn btn-danger\"}>🗑️</button>\n            <br></br><br></br>\n        </div>\n    )\n}\n\nfunction Settings(props) {\n    let onDelete = (index)=>{\n        let nArr = props.keybinds.filter((e) => e.id !== index)\n        props.onBindSave(nArr)\n    }\n\n    let addKeybind = () => {\n        props.onBindSave([...props.keybinds, { id: props.nextkIndex, action: \"unassigned\", keybind: [\"\", \"\", \"\", \"\", \"\", \"\", \"\"] }]);\n        props.updateIndex(props.nextkIndex + 1);\n    }\n\n\n\n    return(\n        <div style={{backgroundColor: \"#fafafa\", height: \"10000px\"}}>\n            <TopBar></TopBar>\n            <SideBar messages={props.messages} />\n            <div style={{marginLeft: \"345px\"}}>\n                <h3 style={{float: \"left\"}}>Notifications:</h3> \n                <br></br><br></br>\n                <p style={{float: \"left\"}}>Enable Notifications?</p> <label class=\"switch\" style={{float: \"left\", marginLeft: \"405px\"}}><input value={props.notify} checked={props.notify} onChange={()=> props.toggleNotification(!props.notify)}  style={{float: \"left\"}} type=\"checkbox\"/><span style={{float: \"left\"}} class=\"slider round\"></span></label>\n                <br></br><br></br>\n                <hr></hr>\n                <h3 style={{float: \"left\"}}>Keybinds:</h3>  \n                <button style={{float: \"left\", marginLeft: \"455px\"}} type=\"button\" class=\"btn btn-success\" onClick = {addKeybind}>+</button> \n                <br></br><br></br>\n                <p style={{float: \"left\"}}>Use spacebar to clear your keybind while recording if you make a mistake.</p>\n                <br></br><br></br>\n                <div style={{float: \"left\"}}> {props.keybinds.map(e => <KeybindSetting keybinds={props.keybinds} onDelete={onDelete} onBindSave={props.onBindSave} index={e.id} seq={e.keybind} action={e.action}/>)}</div>\n                <br></br><br></br>\n            \n            </div>\n            \n        </div>\n    )\n}\n\nexport default Settings;","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport SimulatedLoginPage from \"./components/SimulatedLoginPage\";\nimport AppLayout from \"./layouts/AppLayout\";\nimport \"react-chatbox-component/dist/style.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport ClassCalendar from \"./components/ClassCalendar\";\nimport Settings from \"./components/Settings\"\nimport './App.css';\nimport ReactNotification from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\n\n// Warn if overriding existing method\nif(Array.prototype.equals)\n    console.warn(\"Overriding existing Array.prototype.equals. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.\");\n// attach the .equals method to Array's prototype to call it on any array\nArray.prototype.equals = function (array) {\n    // if the other array is a falsy value, return\n    if (!array)\n        return false;\n\n    // compare lengths - can save a lot of time \n    if (this.length != array.length)\n        return false;\n\n    for (var i = 0, l=this.length; i < l; i++) {\n        // Check if we have nested arrays\n        if (this[i] instanceof Array && array[i] instanceof Array) {\n            // recurse into the nested arrays\n            if (!this[i].equals(array[i]))\n                return false;       \n        }           \n        else if (this[i] != array[i]) { \n            // Warning - two different object instances will never be equal: {x:20} != {x:20}\n            return false;   \n        }           \n    }       \n    return true;\n}\n// Hide method from for-in loops\nObject.defineProperty(Array.prototype, \"equals\", {enumerable: false});\n\n\nfunction App() {\n  // Need the state to be stored up here so others can use it to change the behaviour of thier\n  // components.\n  const [notify, toggleNotification] = useState(true); //use this for the message component to see if you need to send a notification or not.\n  const [keybinds, onBindSave] = useState(\n    [{\n      \"id\": 0,\n      \"action\": \"unassigned\",\n      \"keybind\": [\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\"\n      ]\n    }]\n    );\n  const [nextkIndex, updateIndex]= useState(1)\n  const [events, onEventSave] = useState([]);\n\n  const [logins, onAddLogin] = useState({\n    discord: false,\n    teams: false,\n    zoom: false,\n  });\n\n  const [user, updateUser] = useState({\n    \"uid\": 'currentUser'\n  });\n\n  const [messages, onMessageSave] = useState({\n    discord: {\n      chats: [],\n    },\n    teams: {\n      chats: [],\n    },\n    zoom: {\n      chats: [],\n    },\n  });\n  const [currSeq, updateSeq] = useState([]);\n  \n  const handleKeyDown = (event) => {\n    if (!event.repeat){\n      //\n      updateSeq([...currSeq,event.key.toLowerCase()])\n    }\n    \n  };\n  const handleKeyUp = (event) => {\n    if (currSeq.includes(event.key.toLowerCase() )){\n      updateSeq([])\n    }\n  }; \n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n\n    let obj = keybinds.find((o) => {\n      if (o.keybind.equals(currSeq)) {\n          return o;\n      }\n     });\n    if (obj){\n      if (obj.action === \"back\"){\n        window.history.back();\n        updateSeq([])\n      }else if (obj.action === \"notify\"){\n        console.log(\"toggling notifications\",notify)\n        toggleNotification(!notify);\n        updateSeq([])\n      }else if (obj.action === \"unassigned\"){\n        console.log(\"Do Nothing\")\n        updateSeq([])\n      }\n    }\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyDown);\n    };\n  },[keybinds,currSeq,updateSeq,handleKeyDown,toggleNotification,handleKeyUp,notify]);\n\n  return (\n    \n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n    {notify? <ReactNotification /> : \"\"}  \n      <Switch>\n        <Route exact path=\"/tocom\"><Redirect to=\"/tocom/app\" /></Route>\n        <Route path=\"/tocom/app\">\n          <AppLayout\n            logins={logins}\n            addLogin={onAddLogin}\n            messages={messages}\n            addMessage={onMessageSave}\n            user={user}\n          />\n        </Route>\n        <Route\n          exact\n          path=\"/tocom/external/connectAccount/:type\"\n          render={(props) => (\n            <SimulatedLoginPage\n              {...props}\n              logins={logins}\n              addLogin={onAddLogin}\n              addMessages={onMessageSave}\n              messages={messages}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/tocom/settings\"\n          render={(props) => (\n            <Settings notify={notify} messages={messages} toggleNotification={toggleNotification} keybinds={keybinds} onBindSave={onBindSave} nextkIndex={nextkIndex} updateIndex={updateIndex}></Settings>\n\n          )}\n        />\n        <Route\n          exact\n          path=\"/tocom/calendar\"\n          render={(props) => (\n            <ClassCalendar onEventSave={onEventSave} messages={messages} events={events}/>\n\n          )}\n        />\n      </Switch>\n    </BrowserRouter>\n      \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}