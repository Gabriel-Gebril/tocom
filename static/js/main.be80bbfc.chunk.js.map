{"version":3,"sources":["data/SelectableChatsData.js","data/MessageData.js","components/SimulatedLoginPage.js","components/TopBar.js","components/SelectableChat.js","components/ChatDivider.js","components/SideBar.js","components/NoChats.js","components/Chat.js","components/SearchPage.js","layouts/AppLayout.js","components/ClassCalendar.js","components/Settings.js","App.js","reportWebVitals.js","index.js"],"names":["getSelectableChatForPlatform","platformName","toLowerCase","chatId","chatName","chatDescription","avatarUrl","messages","getMyFirstChatMessages","platform","getCs50Messages","getSophiaMessages","SimulatedLoginPage","props","state","email","password","errors","invalid","this","length","event","preventDefault","doAddAccount","setState","target","value","accountType","match","params","type","addLogin","discord","zoom","logins","teams","doAddMessages","history","push","availableChats","addMessages","chats","classes","className","root","container","logo","src","getLogo","alt","loginForm","noValidate","onSubmit","e","handleSubmit","TextField","textfield","error","label","helperText","variant","onChange","handleEmailChange","handlePasswordChange","Button","loginButton","color","disabled","validateForm","React","Component","withStyles","theme","display","width","height","justifyContent","alignItems","formError","flexDirection","maxWidth","minWidth","marginBottom","spacing","TopBar","searchField","onSearch","bind","query","encodeURI","AppBar","position","Toolbar","Typography","title","noWrap","search","searchIcon","InputBase","placeholder","inputRoot","input","inputInput","inputProps","flexGrow","marginLeft","menuButton","marginRight","breakpoints","up","borderRadius","shape","backgroundColor","fade","palette","common","white","padding","pointerEvents","paddingLeft","transition","transitions","create","withRouter","SelectableChat","avatar","Avatar","avatarImage","details","content","notifications","ChatDivider","selectedChat","Accordion","AccordionSummary","expandIcon","aria-controls","id","List","component","map","index","ListItem","button","onClick","handleListItemClick","selected","addChat","SideBar","selectedIndex","Drawer","drawer","paper","drawerPaper","anchor","toolbar","Divider","ListItemIcon","ListItemText","primary","flexShrink","mixins","fixedOptions","option","icon","NoChats","text","types","typeLogo","Link","to","margin","Chat","user","qs","require","SearchPage","parse","location","ignoreQueryPrefix","filter","includes","header","results","getChats","platformHeading","platformResults","AppLayout","intId","parseInt","console","log","message","newMessage","sender","name","uid","discordChats","store","addNotification","insert","animationIn","animationOut","dismiss","duration","onScreen","teamsChats","zoomChats","addMessage","Fragment","CssBaseline","path","render","getMessages","minHeight","localizer","momentLocalizer","moment","Event","href","link","style","EventAgenda","ClassCalendar","args","handleSelect","start","end","window","prompt","onEventSave","events","selectable","startAccessor","endAccessor","defaultView","Views","WEEK","onSelectEvent","alert","onSelectSlot","scrollToTime","components","agenda","KeybindSetting","useState","checked","setChecked","seq","currSeq","updateSeq","action","currAction","handleActionChange","handleKeyDown","repeat","keyCode","key","handleKeyUp","useEffect","addEventListener","removeEventListener","arr","keybinds","find","o","i","keybind","onBindSave","for","readOnly","join","onDelete","Settings","nArr","float","class","notify","toggleNotification","nextkIndex","updateIndex","Array","prototype","equals","warn","array","l","Object","defineProperty","enumerable","App","onAddLogin","onMessageSave","obj","back","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.be80bbfc.chunk.js","sourcesContent":["export function getSelectableChatForPlatform(platformName) {\r\n    switch (platformName.toLowerCase()) {\r\n        case \"discord\": {\r\n            return [\r\n                {\r\n                    chatId: 1,\r\n                    chatName: 'My first discord chat',\r\n                    chatDescription: 'Test channel',\r\n                    avatarUrl: 'https://via.placeholder.com/150',\r\n                    messages: []\r\n                },\r\n                {\r\n                    chatId: 2,\r\n                    chatName: 'CS50',\r\n                    chatDescription: 'Harvard Intro to CS Discord',\r\n                    avatarUrl: 'https://via.placeholder.com/150',\r\n                    messages: []\r\n                },\r\n                {\r\n                    chatId: 3,\r\n                    chatName: 'Sophia',\r\n                    chatDescription: 'Private discord chat with Sophia Mills',\r\n                    avatarUrl: 'https://via.placeholder.com/150',\r\n                    messages: []\r\n                }\r\n            ]\r\n        };\r\n        case \"teams\": {\r\n            return [\r\n                {\r\n                    chatId: 4,\r\n                    chatName: 'My first teams chat',\r\n                    chatDescription: 'Test channel',\r\n                    avatarUrl: 'https://via.placeholder.com/150',\r\n                    messages: []\r\n                },\r\n                {\r\n                    chatId: 5,\r\n                    chatName: 'CS50',\r\n                    chatDescription: 'Harvard Intro to CS Teams',\r\n                    avatarUrl: 'https://via.placeholder.com/150',\r\n                    messages: []\r\n                },\r\n                {\r\n                    chatId: 6,\r\n                    chatName: 'Sophia',\r\n                    chatDescription: 'Private teams chat with Sophia Mills',\r\n                    avatarUrl: 'https://via.placeholder.com/150',\r\n                    messages: []\r\n                }\r\n            ]\r\n        };\r\n        case \"zoom\": {\r\n            return [\r\n                {\r\n                    chatId: 7,\r\n                    chatName: 'My first zoom chat',\r\n                    chatDescription: 'Test channel',\r\n                    avatarUrl: 'https://via.placeholder.com/150',\r\n                    messages: []\r\n                },\r\n                {\r\n                    chatId: 8,\r\n                    chatName: 'CS50',\r\n                    chatDescription: 'Harvard Intro to CS Zoom',\r\n                    avatarUrl: 'https://via.placeholder.com/150',\r\n                    messages: []\r\n                },\r\n                {\r\n                    chatId: 9,\r\n                    chatName: 'Sophia',\r\n                    chatDescription: 'Private zoom chat with Sophia Mills',\r\n                    avatarUrl: 'https://via.placeholder.com/150',\r\n                    messages: []\r\n                }\r\n            ]\r\n        };\r\n        default: return null;\r\n    }\r\n}","export function getMyFirstChatMessages(platform) {\r\n    return [\r\n        {\r\n            \"text\": \"Hi there. This is my first ever chat message\",\r\n            \"id\": \"1\",\r\n            \"sender\": {\r\n                \"name\": \"Terry Crews\",\r\n                \"uid\": \"terrycrews_\" + platform,\r\n                \"avatar\": \"/tocom/images/terry.jpg\"\r\n            }\r\n        },\r\n    ]\r\n}\r\n\r\nexport function getCs50Messages(platform) {\r\n    return [\r\n        {\r\n            \"text\": \"Hi there. Welcome to CS50. Please introduce yourselves\",\r\n            \"id\": \"1\",\r\n            \"sender\": {\r\n                \"name\": \"CS50 Bot\",\r\n                \"uid\": \"cs50bot_\" + platform,\r\n                \"avatar\": \"/tocom/images/bot.jpg\"\r\n            }\r\n        },\r\n        {\r\n            \"text\": \"Hi there. I'm Mark Juniors\",\r\n            \"id\": \"2\",\r\n            \"sender\": {\r\n                \"name\": \"Mark J.\",\r\n                \"uid\": \"markj_\" + platform,\r\n                \"avatar\": \"/tocom/images/mark.jpg\"\r\n            }\r\n        },\r\n    ]\r\n}\r\n\r\nexport function getSophiaMessages(platform) {\r\n    return [\r\n        {\r\n            \"text\": \"Hi there. My name's Sophia! What's yours?\",\r\n            \"id\": \"1\",\r\n            \"sender\": {\r\n                \"name\": \"Sophia\",\r\n                \"uid\": \"sophia_\" + platform,\r\n                \"avatar\": \"/tocom/images/sophia.jpg\"\r\n            }\r\n        },\r\n        {\r\n            \"text\": \"This is an autoresponse\",\r\n            \"id\": \"2\",\r\n            \"sender\": {\r\n                \"name\": \"Me\",\r\n                \"uid\": \"currentUser\",\r\n                \"avatar\": \"https://ui-avatars.com/api/?name=M+E\"\r\n            }\r\n        },\r\n        {\r\n            \"text\": \"Oh. You must be busy. Are you available to meet on Decembet 17th, 2020 for a quick face to face meeting?\",\r\n            \"id\": \"3\",\r\n            \"sender\": {\r\n                \"name\": \"Sophia\",\r\n                \"uid\": \"sophia_\" + platform,\r\n                \"avatar\": \"/tocom/images/sophia.jpg\"\r\n            }\r\n        },\r\n    ]\r\n}","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { getSelectableChatForPlatform } from '../data/SelectableChatsData';\r\nimport { getCs50Messages, getMyFirstChatMessages, getSophiaMessages } from \"../data/MessageData\";\r\n\r\nconst useStyles = (theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  formError: {\r\n    color: \"red\",\r\n  },\r\n  loginForm: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: 'center',\r\n\r\n  },\r\n  container: {\r\n    maxWidth: 960,\r\n    minWidth: 400,\r\n    display: \"flex\",\r\n    flexDirection: 'column',\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  loginButton: {\r\n    width: '75%'\r\n  },\r\n  textfield: {\r\n      marginBottom: theme.spacing(3),\r\n      width: '100%',\r\n  },\r\n  logo: {\r\n      maxWidth: 500,\r\n      marginBottom: theme.spacing(4)\r\n  }\r\n});\r\n\r\nclass SimulatedLoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {\r\n        invalid: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  validateForm() {\r\n    return this.state.email.length > 0 && this.state.password.length > 0;\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event?.preventDefault();\r\n\r\n    if (\r\n      this.state.email === \"test@tocom.ca\" &&\r\n      this.state.password === \"tocom1\"\r\n    ) {\r\n      this.doAddAccount();\r\n    } else {\r\n      this.setState({ errors: { invalid: true } });\r\n    }\r\n  }\r\n\r\n  handleEmailChange(event) {\r\n    this.setState({\r\n        email: event.target.value,\r\n        errors: {\r\n            invalid: false\r\n        }\r\n    });\r\n  }\r\n\r\n  handlePasswordChange(event) {\r\n    this.setState({\r\n        password: event.target.value,\r\n        errors: {\r\n            invalid: false\r\n        }\r\n    });\r\n  }\r\n\r\n  doAddAccount() {\r\n    var accountType = this.props?.match?.params?.type;\r\n\r\n    if (accountType === \"discord\") {\r\n      this.props.addLogin({\r\n        discord: true,\r\n        zoom: this.props.logins.zoom,\r\n        teams: this.props.logins.teams\r\n        });\r\n    } else if (accountType === \"teams\") {\r\n      this.props.addLogin({\r\n        teams: true,\r\n        zoom: this.props.logins.zoom,\r\n        discord: this.props.logins.discord,\r\n      });\r\n    } else if (accountType === \"zoom\") {\r\n      this.props.addLogin({\r\n        zoom: true,\r\n        discord: this.props.logins.discord,\r\n        teams: this.props.logins.teams\r\n      });\r\n    } \r\n\r\n    this.doAddMessages(accountType);\r\n\r\n    this.props.history.push('/app');\r\n  }\r\n\r\n  doAddMessages(accountType) {\r\n    var availableChats;\r\n\r\n    if (accountType === \"discord\") {\r\n      availableChats = getSelectableChatForPlatform(accountType);\r\n      availableChats[0].messages = getMyFirstChatMessages(accountType);\r\n      availableChats[1].messages = getCs50Messages(accountType);\r\n      availableChats[2].messages = getSophiaMessages(accountType);\r\n\r\n      this.props.addMessages({\r\n        discord: {\r\n          chats: availableChats\r\n        },\r\n        teams: this.props.messages.teams,\r\n        zoom: this.props.messages.zoom,\r\n      });\r\n\r\n    } else if (accountType === \"teams\") {\r\n      availableChats = getSelectableChatForPlatform(accountType);\r\n      availableChats[0].messages = getMyFirstChatMessages(accountType);\r\n      availableChats[1].messages = getCs50Messages(accountType);\r\n      availableChats[2].messages = getSophiaMessages(accountType);\r\n\r\n      this.props.addMessages({\r\n        teams: {\r\n          chats: availableChats\r\n        },\r\n        zoom: this.props.messages.zoom,\r\n        discord: this.props.messages.discord\r\n      });\r\n    } else if (accountType === \"zoom\") {\r\n      availableChats = getSelectableChatForPlatform(accountType);\r\n      availableChats[0].messages = getMyFirstChatMessages(accountType);\r\n      availableChats[1].messages = getCs50Messages(accountType);\r\n      availableChats[2].messages = getSophiaMessages(accountType);\r\n\r\n      this.props.addMessages({\r\n        zoom: {\r\n          chats: availableChats\r\n        },\r\n        teams: this.props.messages.teams,\r\n        discord: this.props.messages.discord\r\n      });\r\n    } else return;\r\n  }\r\n\r\n  getLogo(type) {\r\n    if (type === \"discord\") {\r\n      return \"/tocom/images/discord.png\";\r\n    } else if (type === \"teams\") {\r\n      return \"/tocom/images/teams.png\";\r\n    } else if (type === \"zoom\") {\r\n      return \"/tocom/images/zoom.png\";\r\n    } else return \"\";\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <div className={classes.container}>\r\n          <div>\r\n            <img className={classes.logo} src={this.getLogo(this.props?.match?.params?.type)} alt=\"Logo\"/>\r\n          </div>\r\n\r\n          <form className={classes.loginForm} noValidate={true} onSubmit={(e) => this.handleSubmit(e)}>\r\n            <TextField\r\n            className={classes.textfield}\r\n              error={this.state.errors.invalid}\r\n              label=\"Email\"\r\n              helperText={this.state.errors.invalid ? 'Invalid email or password' : ''}\r\n              variant=\"outlined\"\r\n              type=\"email\"\r\n              value={this.state.email}\r\n              onChange={(e) => this.handleEmailChange(e)}\r\n            />\r\n            <TextField\r\n            className={classes.textfield}\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n              type=\"password\"\r\n              value={this.state.password}\r\n              onChange={(e) => this.handlePasswordChange(e)}\r\n            />\r\n            <Button\r\n              className={classes.loginButton}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={!this.validateForm()}\r\n              type=\"submit\"\r\n            >\r\n              Login\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(SimulatedLoginPage);\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport { fade, withStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst useStyles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginLeft: \"340px\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"36ch\",\r\n      \"&:focus\": {\r\n        width: \"42ch\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nclass TopBar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      searchField: ''\r\n    };\r\n\r\n    this.onSearch = this.onSearch.bind(this);\r\n  }\r\n\r\n  onSearch(event) {\r\n    event.preventDefault();\r\n\r\n    var query = encodeURI(this.state.searchField);\r\n\r\n    this.setState({\r\n      searchField: ''\r\n    });\r\n\r\n    this.props.history.push('/app/search?query=' + query);\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n              <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                Tocom Interactive Prototype\r\n              </Typography>\r\n\r\n            <form onSubmit={this.onSearch}>\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Search (chat, person, description, etc...)\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ \"aria-label\": \"search\" }}\r\n                value={this.state.searchField}\r\n                onChange={(event) => this.setState({searchField: event.target.value})}\r\n              />\r\n            </div>\r\n            </form>\r\n\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(withRouter(TopBar));\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  details: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      padding: theme.spacing(1)\r\n  },\r\n  content: {\r\n      \r\n  },\r\n  avatar: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      height: 80,\r\n      width: 80,\r\n  },\r\n  avatarImage: {\r\n      width: 64,\r\n      height: 64\r\n  },\r\n  notifications: {\r\n      display: 'flex',\r\n      flexDirection: 'row'\r\n  }\r\n});\r\n\r\nclass SelectableChat extends React.Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <div className={classes.avatar}>\r\n            <Avatar alt={this.props.chatName} src={this.props.avatarUrl} className={classes.avatarImage}/>\r\n        </div>\r\n        <div className={classes.details}>\r\n          <div className={classes.content}>\r\n            <Typography>\r\n              { this.props.chatName }\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              <small>{ this.props.chatDescription }</small>\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.notifications}>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(SelectableChat);\r\n","import React from \"react\";\r\nimport { Typography, withStyles } from \"@material-ui/core\";\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport SelectableChat from \"./SelectableChat\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst useStyles = (theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  platformName: {\r\n    display: \"flex\",\r\n    padding: theme.spacing(1),\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  addChat: {\r\n    display: \"flex\",\r\n    padding: theme.spacing(1),\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n  },\r\n});\r\n\r\nclass ChatDivider extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedChat: 0\r\n    }\r\n  }\r\n\r\n  handleListItemClick(event, chatId) {\r\n    event.preventDefault();\r\n\r\n    this.setState({\r\n      selectedChat: chatId\r\n    });\r\n\r\n    this.props.history.push('/app/chat/' + chatId);\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography variant=\"h5\">{this.props.platformName}</Typography>\r\n        </AccordionSummary>\r\n        <List component=\"nav\">\r\n        {\r\n            this.props.chats?.map(({chatId, chatName, chatDescription, avatarUrl}, index) => \r\n                <ListItem key={chatId} button onClick={(event, id) => this.handleListItemClick(event, chatId)} selected={this.state.selectedChat === chatId}>\r\n                  <SelectableChat key={chatId} chatName={chatName} chatDescription={chatDescription} avatarUrl={avatarUrl} />\r\n                </ListItem>\r\n            )\r\n        }\r\n        </List>\r\n\r\n      </Accordion>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(withRouter(ChatDivider));\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ChatDivider from \"./ChatDivider\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport EventIcon from '@material-ui/icons/Event';\r\n\r\nconst drawerWidth = 340;\r\n\r\nconst useStyles = (theme) => ({\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  fixedOptions: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n  },\r\n  option: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    height: 80,\r\n    width: \"100%\",\r\n  },\r\n  icon: {\r\n    width: 80,\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  details: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(2),\r\n  },\r\n});\r\n\r\nexport class SideBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedIndex: -1,\r\n    };\r\n  }\r\n\r\n  handleListItemClick = (event, index) => {\r\n    this.setState({ selectedIndex: index });\r\n\r\n    if (index === 0) {\r\n      this.props.history.push(\"/app/addAccount\");\r\n    }\r\n    if (index === 1) {\r\n      this.props.history.push(\"/settings\");\r\n    }\r\n    if (index === 2) {\r\n      this.props.history.push(\"/calendar\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <div className={classes.toolbar} />\r\n        <Divider />\r\n        <ChatDivider platformName=\"Discord\" chats={this.props.messages?.discord?.chats} />\r\n        <ChatDivider platformName=\"Teams\" chats={this.props.messages?.teams?.chats} />\r\n        <ChatDivider platformName=\"Zoom\" chats={this.props.messages?.zoom?.chats} />\r\n        <Divider />\r\n\r\n        <List component=\"nav\">\r\n          <ListItem\r\n            button\r\n            onClick={(event) => this.handleListItemClick(event, 0)}\r\n          >\r\n            <ListItemIcon>\r\n              <AddIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Add Account\" />\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            onClick={(event) => this.handleListItemClick(event, 1)}\r\n          >\r\n            <ListItemIcon>\r\n              <SettingsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Settings\" />\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            onClick={(event) => this.handleListItemClick(event, 2)}\r\n          >\r\n            <ListItemIcon>\r\n              <EventIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Calendar\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(withRouter(SideBar));\r\n","import React from \"react\";\r\nimport { Typography, withStyles } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = (theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  types: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  type: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    margin: theme.spacing(8),\r\n  },\r\n  text: {\r\n    \r\n  },\r\n  logo: {\r\n    width: 128,\r\n    height: 128,\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n});\r\n\r\nclass NoChats extends React.Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Typography className={classes.text} variant=\"h4\">\r\n          Connect an Account\r\n        </Typography>\r\n        <div className={classes.types}>\r\n          {!this.props.logins.discord && (\r\n            <div className={classes.type}>\r\n              <div className={classes.typeLogo}>\r\n                <img className={classes.logo} src=\"/tocom/images/discord_icon.png\" />\r\n              </div>\r\n              <Button variant=\"outlined\" color=\"primary\" component={Link} to=\"/external/connectAccount/discord\">\r\n                Add Discord Account\r\n              </Button>\r\n            </div>\r\n          )}\r\n          {!this.props.logins.teams && (\r\n            <div className={classes.type}>\r\n              <div className={classes.typeLogo}>\r\n                <img className={classes.logo} src=\"/tocom/images/teams_icon.png\" />\r\n              </div>\r\n              <Button variant=\"outlined\" color=\"primary\" component={Link} to=\"/external/connectAccount/teams\">\r\n                Add Teams Account\r\n              </Button>\r\n            </div>\r\n          )}\r\n          {!this.props.logins.zoom && (\r\n            <div className={classes.type}>\r\n              <div className={classes.typeLogo}>\r\n                <img className={classes.logo} src=\"/tocom/images/zoom_icon.png\" />\r\n              </div>\r\n              <Button variant=\"outlined\" color=\"primary\" component={Link} to=\"/external/connectAccount/zoom\">\r\n                Add Zoom Account\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(NoChats);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core';\r\nimport { ChatBox } from 'react-chatbox-component';\r\n\r\nconst useStyles = theme => ({\r\n\r\n});\r\n\r\nclass Chat extends React.Component {\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            \r\n            <ChatBox\r\n                messages={this.props.messages}\r\n                user={this.props.user}\r\n                onSubmit={this.props.onSubmit}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(Chat);","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport SelectableChat from \"./SelectableChat\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst qs = require(\"qs\");\r\n\r\nconst useStyles = (theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    padding: theme.spacing(4),\r\n    paddingLeft: theme.spacing(8),\r\n  },\r\n  results: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: theme.spacing(2),\r\n  },\r\n});\r\n\r\nclass SearchPage extends React.Component {\r\n  handleListItemClick(event, chatId) {\r\n    this.props.history.push(\"/app/chat/\" + chatId);\r\n  }\r\n\r\n  getChats(platform) {\r\n    let chats;\r\n    if (platform === \"discord\") {\r\n      chats = this.props.messages.discord.chats;\r\n    } else if (platform === \"teams\") {\r\n      chats = this.props.messages.teams.chats;\r\n    } else if (platform === \"zoom\") {\r\n      chats = this.props.messages.zoom.chats;\r\n    } else return [];\r\n\r\n    if (chats.length === 0) {\r\n      return [];\r\n    }\r\n\r\n    const query = qs.parse(this.props.location.search, {\r\n      ignoreQueryPrefix: true,\r\n    }).query;\r\n\r\n    return chats.filter(({ chatName, chatDescription }) => {\r\n      return (\r\n        chatName.toLowerCase().includes(query.toLowerCase()) ||\r\n        chatDescription.toLowerCase().includes(query.toLowerCase())\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    const query = qs.parse(this.props.location.search, {\r\n      ignoreQueryPrefix: true,\r\n    }).query;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <div className={classes.header}>\r\n          <Typography variant=\"h5\">\r\n            Search Results for: <small>{query}</small>\r\n          </Typography>\r\n        </div>\r\n\r\n        <div className={classes.results}>\r\n          {this.getChats(\"discord\").length > 0 && (\r\n            <div className={classes.platform}>\r\n              <div className={classes.platformHeading}>\r\n                <Typography variant=\"h5\">Discord</Typography>\r\n              </div>\r\n              <div className={classes.platformResults}>\r\n                <List component=\"nav\">\r\n                  {this.getChats(\"discord\").map(\r\n                    (\r\n                      { chatId, chatName, chatDescription, avatarUrl },\r\n                      index\r\n                    ) => (\r\n                      <ListItem\r\n                        key={chatId}\r\n                        button\r\n                        onClick={(event, id) =>\r\n                          this.handleListItemClick(event, chatId)\r\n                        }\r\n                      >\r\n                        <SelectableChat\r\n                          key={chatId}\r\n                          chatName={chatName}\r\n                          chatDescription={chatDescription}\r\n                          avatarUrl={avatarUrl}\r\n                        />\r\n                      </ListItem>\r\n                    )\r\n                  )}\r\n                </List>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {this.getChats(\"teams\").length > 0 && (\r\n            <div className={classes.platform}>\r\n              <div className={classes.platformHeading}>\r\n                <Typography variant=\"h5\">Microsoft Teams</Typography>\r\n              </div>\r\n              <div className={classes.platformResults}>\r\n                <List component=\"nav\">\r\n                  {this.getChats(\"teams\").map(\r\n                    (\r\n                      { chatId, chatName, chatDescription, avatarUrl },\r\n                      index\r\n                    ) => (\r\n                      <ListItem\r\n                        key={chatId}\r\n                        button\r\n                        onClick={(event, id) =>\r\n                          this.handleListItemClick(event, chatId)\r\n                        }\r\n                      >\r\n                        <SelectableChat\r\n                          key={chatId}\r\n                          chatName={chatName}\r\n                          chatDescription={chatDescription}\r\n                          avatarUrl={avatarUrl}\r\n                        />\r\n                      </ListItem>\r\n                    )\r\n                  )}\r\n                </List>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {this.getChats(\"zoom\").length > 0 && (\r\n            <div className={classes.platform}>\r\n              <div className={classes.platformHeading}>\r\n                <Typography variant=\"h5\">Zoom</Typography>\r\n              </div>\r\n              <div className={classes.platformResults}>\r\n                <List component=\"nav\">\r\n                  {this.getChats(\"zoom\").map(\r\n                    (\r\n                      { chatId, chatName, chatDescription, avatarUrl },\r\n                      index\r\n                    ) => (\r\n                      <ListItem\r\n                        key={chatId}\r\n                        button\r\n                        onClick={(event, id) =>\r\n                          this.handleListItemClick(event, chatId)\r\n                        }\r\n                      >\r\n                        <SelectableChat\r\n                          key={chatId}\r\n                          chatName={chatName}\r\n                          chatDescription={chatDescription}\r\n                          avatarUrl={avatarUrl}\r\n                        />\r\n                      </ListItem>\r\n                    )\r\n                  )}\r\n                </List>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(withRouter(SearchPage));\r\n","import React from \"react\";\r\nimport { CssBaseline, withStyles } from \"@material-ui/core\";\r\nimport TopBar from \"../components/TopBar\";\r\nimport SideBar from \"../components/SideBar\";\r\nimport NoChats from \"../components/NoChats\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Chat from \"../components/Chat\";\r\nimport \"../App.css\";\r\nimport SearchPage from \"../components/SearchPage\";\r\nimport { store } from 'react-notifications-component';\r\nconst sidebarWidth = 300;\r\n\r\nconst useStyles = (theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  toolbar: {\r\n    minHeight: 'calc(100vh - 64px)'\r\n  },\r\n  content: {\r\n    marginLeft: 340,\r\n  },\r\n});\r\n\r\nclass AppLayout extends React.Component {\r\n  anyLogins() {\r\n    if (\r\n      this.props.logins.discord ||\r\n      this.props.logins.zoom ||\r\n      this.props.logins.teams\r\n    ) {\r\n      return true;\r\n    } else return false;\r\n  }\r\n\r\n  getMessages(id) {\r\n    var intId = parseInt(id);\r\n\r\n    const messages = [\r\n      ...this.props.messages.discord.chats,\r\n      ...this.props.messages.teams.chats,\r\n      ...this.props.messages.zoom.chats,\r\n    ];\r\n\r\n    var filtered = messages.filter(({ chatId }) => {\r\n      return chatId === intId;\r\n    });\r\n\r\n    return filtered[0].messages;\r\n  }\r\n\r\n  onSubmit(chatId, props) {\r\n    console.log(\"creating on submit function\");\r\n\r\n    return function (message) {\r\n      console.log(\"onSubmit called\");\r\n      console.log(chatId + \" \" + message);\r\n      //console.log(props);\r\n\r\n      var newMessage = {\r\n        text: message,\r\n        id: 0,\r\n        sender: {\r\n          name: \"Me\",\r\n          uid: \"currentUser\",\r\n          avatar: \"https://ui-avatars.com/api/?name=M+E\",\r\n        },\r\n      };\r\n\r\n      var discord = props.messages.zoom;\r\n      var teams = props.messages.teams;\r\n      var zoom = props.messages.zoom;\r\n\r\n      if (chatId >= 1 && chatId <= 3) {\r\n        var discordChats = [...props.messages.discord.chats];\r\n\r\n        newMessage.id = discordChats[chatId - 1].messages.length + 1;\r\n\r\n        discordChats[chatId - 1].messages = [\r\n          ...discordChats[chatId - 1].messages,\r\n          newMessage,{\r\n            \"text\": \"This is an automated response\",\r\n            \"id\": newMessage.id + 1,\r\n            \"sender\": {\r\n                \"name\": \"CS50 Bot\",\r\n                \"uid\": \"cs50bot_discord\",\r\n                \"avatar\": \"/tocom/images/bot.jpg\"\r\n            }\r\n        }\r\n        ];\r\n\r\n        store.addNotification({\r\n          title: \"CS50 Bot has sent you a message on discord!\",\r\n          message: \"This is an automated response\",\r\n          type: \"success\",\r\n          insert: \"bottom\",\r\n          container: \"bottom-right\",\r\n          animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n          animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n          dismiss: {\r\n            duration: 5000,\r\n            onScreen: true\r\n          }\r\n        });\r\n\r\n        discord = {\r\n          chats: discordChats,\r\n        };\r\n      } else if (chatId >= 4 && chatId <= 6) {\r\n        var teamsChats = [...props.messages.teams.chats];\r\n\r\n        newMessage.id = teamsChats[chatId - 4].messages.length + 1;\r\n\r\n        teamsChats[chatId - 4].messages = [\r\n          ...teamsChats[chatId - 4].messages,\r\n          newMessage,\r\n        ];\r\n\r\n        teams = {\r\n          chats: teamsChats,\r\n        };\r\n      } else if (chatId >= 7 && chatId <= 9) {\r\n        var zoomChats = [...props.messages.zoom.chats];\r\n\r\n        newMessage.id = zoomChats[chatId - 7].messages.length + 1;\r\n\r\n        zoomChats[chatId - 7].messages = [\r\n          ...zoomChats[chatId - 7].messages,\r\n          newMessage,\r\n        ];\r\n\r\n        zoom = {\r\n          chats: zoomChats,\r\n        };\r\n      }\r\n\r\n      props.addMessage({\r\n        discord: discord,\r\n        teams: teams,\r\n        zoom: zoom,\r\n      });\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <TopBar />\r\n        <SideBar messages={this.props.messages} />\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar}>\r\n            <Switch>\r\n              <Route\r\n                path=\"/app/addAccount\"\r\n                render={() => <NoChats logins={this.props.logins} />}\r\n              />\r\n              <Route\r\n                path=\"/app/chat/:id\"\r\n                render={(props) => (\r\n                  <Chat\r\n                    {...props}\r\n                    user={this.props.user}\r\n                    messages={this.getMessages(props.match.params.id)}\r\n                    chatId={props.match.params.id}\r\n                    onSubmit={this.onSubmit(\r\n                      parseInt(props.match.params.id),\r\n                      this.props\r\n                    )}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path=\"/app/search\"\r\n                render={(props) => (\r\n                  <SearchPage {...props} messages={this.props.messages} />\r\n                )}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(AppLayout);\r\n","import React from 'react'\r\nimport { Calendar, momentLocalizer, Views } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\"\r\nimport \"./ClassCalendar.css\"\r\nimport SideBar from \"../components/SideBar\";\r\nimport TopBar from \"../components/TopBar\";\r\nconst localizer = momentLocalizer(moment)\r\nconst propTypes = {}\r\n\r\nfunction Event({ event }) {\r\n  return (\r\n    <span>\r\n      <strong>{event.title + \": \"}</strong>\r\n      <a href={event.link} style={{color: \"red\"}}>{event.link}</a>\r\n    </span>\r\n  )\r\n}\r\n\r\nfunction EventAgenda({ event }) {\r\n  return (\r\n    <span>\r\n      <strong>{event.title +\": \"}</strong>\r\n      <a href={event.link} style={{color: \"red\"}}>{event.link}</a>\r\n    </span>\r\n  )\r\n}\r\n\r\nclass ClassCalendar extends React.Component {\r\n  constructor(...args) {\r\n    super(...args)\r\n    this.onEventSave = this.props.onEventSave;\r\n  }\r\n\r\n  handleSelect = ({ start, end }) => {\r\n    const title = window.prompt('New Event name')\r\n    const link = window.prompt('Enter Class Link')\r\n    if (title)\r\n      this.onEventSave([\r\n        ...this.props.events,\r\n        {\r\n          start,\r\n          end,\r\n          title,\r\n          link\r\n        },\r\n      ])\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TopBar></TopBar>\r\n        <SideBar messages={this.props.messages} />\r\n        <Calendar\r\n          selectable\r\n          localizer={localizer}\r\n          events={this.props.events}\r\n          startAccessor=\"start\"\r\n          endAccessor=\"end\"\r\n          defaultView={Views.WEEK}\r\n          onSelectEvent={event => alert(event.title + \" : \" + event.link)}\r\n          onSelectSlot={this.handleSelect}\r\n          style={{ height: 500, marginLeft: 340 }}\r\n          scrollToTime\r\n          components={{\r\n            event: Event,\r\n            agenda: {\r\n              event: EventAgenda,\r\n            },\r\n          }\r\n        }\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nClassCalendar.propTypes = propTypes\r\n\r\nexport default ClassCalendar;","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport SideBar from \"../components/SideBar\";\r\nimport { useEffect, useState } from 'react';\r\nimport './Settings.css'\r\nimport TopBar from \"../components/TopBar\";\r\nfunction KeybindSetting(props){\r\n    const [checked, setChecked] = useState(false);\r\n    const [currSeq, updateSeq] = useState(props.seq);\r\n    const [currAction, handleActionChange] = useState(props.action)\r\n    const handleKeyDown = (event) => {\r\n\r\n        if (!event.repeat){\r\n            if (event.keyCode === 32){\r\n                updateSeq([\"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\r\n            }else{updateSeq([...currSeq,event.key.toLowerCase()])}\r\n            \r\n        }\r\n    };\r\n    const handleKeyUp = (event) => {\r\n        if (currSeq.includes(event.key.toLowerCase() )){\r\n            setChecked(!checked);\r\n        }\r\n    };  \r\n      useEffect(() => {\r\n        \r\n        checked ? window.addEventListener('keydown', handleKeyDown):window.removeEventListener('keydown', handleKeyDown);\r\n        checked ? window.addEventListener('keyup', handleKeyUp):window.removeEventListener('keyup', handleKeyUp);\r\n        if (currSeq.length === 4 && checked) {\r\n            setChecked(!checked)\r\n        }\r\n        if (!checked){\r\n            // console.log(props.keybinds)\r\n            let arr = props.keybinds\r\n            let obj = arr.find((o, i) => {\r\n                if (o.id === props.index) {\r\n                    arr[i] = { id: o.id, action: currAction, keybind: currSeq };\r\n                    return true; // stop searching\r\n                }\r\n            });\r\n            if (obj){\r\n                props.onBindSave(arr);\r\n            }else{\r\n                props.onBindSave([...props.keybinds, { id: props.index, action: currAction, keybind: currSeq }]);\r\n            }\r\n        }\r\n        \r\n        return () => {\r\n          window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n      }, [checked,handleKeyDown,handleKeyUp,currSeq.length]);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <label for=\"actions\">Action:</label>\r\n            <select value={currAction} onChange={(event) => handleActionChange(event.target.value)} name=\"actions\">\r\n                <option value=\"unassigned\">Unassigned</option>\r\n                <option value=\"notify\">Toggle Notification Mute</option>\r\n                <option value=\"back\">Navigate Back</option>\r\n            </select>\r\n            \r\n            <label for=\"keybind\">Keybind:</label>\r\n            <input name=\"keybind\" readOnly value={currSeq.length > 6 ? \"\" : currSeq.join(\" + \")} type=\"text\"/>\r\n            <button  type=\"button\" onClick={() => {checked ? console.log(\"\"): updateSeq([]);setChecked(!checked)}} className={checked ? \"btn btn-danger\":\"btn btn-primary\"}>Record</button>\r\n            <button  type=\"button\" onClick={() => props.onDelete(props.index)} className={\"btn btn-danger\"}>🗑️</button>\r\n            <br></br><br></br>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Settings(props) {\r\n    let onDelete = (index)=>{\r\n        let nArr = props.keybinds.filter((e) => e.id !== index)\r\n        props.onBindSave(nArr)\r\n    }\r\n\r\n    let addKeybind = () => {\r\n        props.onBindSave([...props.keybinds, { id: props.nextkIndex, action: \"unassigned\", keybind: [\"\", \"\", \"\", \"\", \"\", \"\", \"\"] }]);\r\n        props.updateIndex(props.nextkIndex + 1);\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div style={{backgroundColor: \"#fafafa\", height: \"10000px\"}}>\r\n            <TopBar></TopBar>\r\n            <SideBar messages={props.messages} />\r\n            <div style={{marginLeft: \"345px\"}}>\r\n                <h3 style={{float: \"left\"}}>Notifications:</h3> \r\n                <br></br><br></br>\r\n                <p style={{float: \"left\"}}>Enable Notifications?</p> <label class=\"switch\" style={{float: \"left\", marginLeft: \"405px\"}}><input value={props.notify} checked={props.notify} onChange={()=> props.toggleNotification(!props.notify)}  style={{float: \"left\"}} type=\"checkbox\"/><span style={{float: \"left\"}} class=\"slider round\"></span></label>\r\n                <br></br><br></br>\r\n                <hr></hr>\r\n                <h3 style={{float: \"left\"}}>Keybinds:</h3>  \r\n                <button style={{float: \"left\", marginLeft: \"455px\"}} type=\"button\" class=\"btn btn-success\" onClick = {addKeybind}>+</button> \r\n                <br></br><br></br>\r\n                <p style={{float: \"left\"}}>Use spacebar to clear your keybind while recording if you make a mistake.</p>\r\n                <br></br><br></br>\r\n                <div style={{float: \"left\"}}> {props.keybinds.map(e => <KeybindSetting keybinds={props.keybinds} onDelete={onDelete} onBindSave={props.onBindSave} index={e.id} seq={e.keybind} action={e.action}/>)}</div>\r\n                <br></br><br></br>\r\n            \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport SimulatedLoginPage from \"./components/SimulatedLoginPage\";\r\nimport AppLayout from \"./layouts/AppLayout\";\r\nimport \"react-chatbox-component/dist/style.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport ClassCalendar from \"./components/ClassCalendar\";\r\nimport Settings from \"./components/Settings\"\r\nimport './App.css';\r\nimport ReactNotification from 'react-notifications-component'\r\nimport 'react-notifications-component/dist/theme.css'\r\n\r\n// Warn if overriding existing method\r\nif(Array.prototype.equals)\r\n    console.warn(\"Overriding existing Array.prototype.equals. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.\");\r\n// attach the .equals method to Array's prototype to call it on any array\r\nArray.prototype.equals = function (array) {\r\n    // if the other array is a falsy value, return\r\n    if (!array)\r\n        return false;\r\n\r\n    // compare lengths - can save a lot of time \r\n    if (this.length != array.length)\r\n        return false;\r\n\r\n    for (var i = 0, l=this.length; i < l; i++) {\r\n        // Check if we have nested arrays\r\n        if (this[i] instanceof Array && array[i] instanceof Array) {\r\n            // recurse into the nested arrays\r\n            if (!this[i].equals(array[i]))\r\n                return false;       \r\n        }           \r\n        else if (this[i] != array[i]) { \r\n            // Warning - two different object instances will never be equal: {x:20} != {x:20}\r\n            return false;   \r\n        }           \r\n    }       \r\n    return true;\r\n}\r\n// Hide method from for-in loops\r\nObject.defineProperty(Array.prototype, \"equals\", {enumerable: false});\r\n\r\n\r\nfunction App() {\r\n  // Need the state to be stored up here so others can use it to change the behaviour of thier\r\n  // components.\r\n  const [notify, toggleNotification] = useState(true); //use this for the message component to see if you need to send a notification or not.\r\n  const [keybinds, onBindSave] = useState(\r\n    [{\r\n      \"id\": 0,\r\n      \"action\": \"unassigned\",\r\n      \"keybind\": [\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      ]\r\n    }]\r\n    );\r\n  const [nextkIndex, updateIndex]= useState(1)\r\n  const [events, onEventSave] = useState([]);\r\n\r\n  const [logins, onAddLogin] = useState({\r\n    discord: false,\r\n    teams: false,\r\n    zoom: false,\r\n  });\r\n\r\n  const [user, updateUser] = useState({\r\n    \"uid\": 'currentUser'\r\n  });\r\n\r\n  const [messages, onMessageSave] = useState({\r\n    discord: {\r\n      chats: [],\r\n    },\r\n    teams: {\r\n      chats: [],\r\n    },\r\n    zoom: {\r\n      chats: [],\r\n    },\r\n  });\r\n  const [currSeq, updateSeq] = useState([]);\r\n  \r\n  const handleKeyDown = (event) => {\r\n    if (!event.repeat){\r\n      //\r\n      updateSeq([...currSeq,event.key.toLowerCase()])\r\n    }\r\n    \r\n  };\r\n  const handleKeyUp = (event) => {\r\n    if (currSeq.includes(event.key.toLowerCase() )){\r\n      updateSeq([])\r\n    }\r\n  }; \r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    window.addEventListener('keyup', handleKeyUp);\r\n\r\n    let obj = keybinds.find((o) => {\r\n      if (o.keybind.equals(currSeq)) {\r\n          return o;\r\n      }\r\n     });\r\n    if (obj){\r\n      if (obj.action === \"back\"){\r\n        window.history.back();\r\n        updateSeq([])\r\n      }else if (obj.action === \"notify\"){\r\n        console.log(\"toggling notifications\",notify)\r\n        toggleNotification(!notify);\r\n        updateSeq([])\r\n      }else if (obj.action === \"unassigned\"){\r\n        console.log(\"Do Nothing\")\r\n        updateSeq([])\r\n      }\r\n    }\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n      window.removeEventListener('keyup', handleKeyDown);\r\n    };\r\n  },[keybinds,currSeq,updateSeq,handleKeyDown,toggleNotification,handleKeyUp,notify]);\r\n\r\n  return (\r\n    \r\n    <BrowserRouter>\r\n    {notify? <ReactNotification /> : \"\"}  \r\n      <Switch>\r\n        <Route exact path=\"/tocom\"><Redirect to=\"/app\" /></Route>\r\n        <Route path=\"/app\">\r\n          <AppLayout\r\n            logins={logins}\r\n            addLogin={onAddLogin}\r\n            messages={messages}\r\n            addMessage={onMessageSave}\r\n            user={user}\r\n          />\r\n        </Route>\r\n        <Route\r\n          exact\r\n          path=\"/external/connectAccount/:type\"\r\n          render={(props) => (\r\n            <SimulatedLoginPage\r\n              {...props}\r\n              logins={logins}\r\n              addLogin={onAddLogin}\r\n              addMessages={onMessageSave}\r\n              messages={messages}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/settings\"\r\n          render={(props) => (\r\n            <Settings notify={notify} messages={messages} toggleNotification={toggleNotification} keybinds={keybinds} onBindSave={onBindSave} nextkIndex={nextkIndex} updateIndex={updateIndex}></Settings>\r\n\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/calendar\"\r\n          render={(props) => (\r\n            <ClassCalendar onEventSave={onEventSave} messages={messages} events={events}/>\r\n\r\n          )}\r\n        />\r\n      </Switch>\r\n    </BrowserRouter>\r\n      \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}